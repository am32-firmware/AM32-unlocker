# unlock MCU for GD32E230 MCUs
source [find target/gd32e23x.cfg]

if { ![info exists BOOTLOADER] } {
   # default for convenience for testing
   set BOOTLOADER "bootloaders/AM32_E230_BOOTLOADER_PA2_V12.bin"
}

# function to wait for some bits to clear
proc wait_till_clear { register bits } {
    # always wait 10ms
    sleep 10
    set v [mrw $register]
    while {[expr {$v & $bits}] != 0} {
        #echo "reg [format 0x%08x $register] [format 0x%08x $v] [format 0x%08x $bits]"
        sleep 1
        set v [mrw $register]
    }
}

echo "Using bootloader $BOOTLOADER"

init
reset
halt

echo "unlocking"
stm32f0x unlock 0

echo "unprotecting"
flash protect 0 0 last off

echo "resetting"
sleep 100
reset
halt

echo "erase 4 bootloader sectors plus start of main fw"
flash erase_sector 0 0 4
sleep 100

echo "Load bootloader"
flash write_bank 0 $BOOTLOADER

echo "verify bootloader"
flash verify_bank 0 $BOOTLOADER

echo "Success!"
exit
